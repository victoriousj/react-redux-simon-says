{"version":3,"sources":["sounds/simonSound1.mp3","sounds/simonSound2.mp3","sounds/simonSound3.mp3","sounds/simonSound4.mp3","sounds/simonSound5.mp3","sounds/success.flac","resources.js","components/Button.js","helpers/helpers.js","components/Score.js","components/ControlButtons.js","components/Controls.js","actiontypes/control.js","actions/control.js","Container.js","reducers/control.js","index.js"],"names":["module","exports","__webpack_require__","p","sounds","firstSound","secondSound","thirdSound","fourthSound","fithSound","sixthSound","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","buttonPress","bind","assertThisInitialized","registerButtonPress","_this2","setState","soundEffect","Audio","index","currentTime","play","setTimeout","inputPause","isPlaying","react_default","a","createElement","onClick","style","backgroundColor","color","className","concat","Component","fetchRandomButtonIndex","Math","floor","random","getNextColorScheme","colorScheme","buttonColors","length","delay","amount","Promise","resolve","parseScore","s","parseInt","score","hs","highScore","parsedScore","toString","parsedHighScore","objectSpread","Score","CSSTransition","childContextTypes","transitionStyles","enterStyle","transform","transit","leaveStyle","activeStyle","ControlButtons","startGame","lib","assign","active","changeColorScheme","Controls","components_Score","ControlButtons_ControlButtons","GAME_END","GAME_START","HALT_INPUT","ALLOW_INPUT","BUTTON_PRESS","ADD_TO_PLAYBACK_SEQUENCE","GAME_CHANGE_COLOR_SCHEME","endGame","type","ControlActionTypes","haltInput","allowInput","addToPlaybackSequence","buttonIndex","colorSchemeId","Container","dispatch","bindActionCreators","ControlActionCreators","showPlaybackSequence","prevState","playbackSequence","_this3","refs","_ref","asyncToGenerator","regenerator_default","mark","_callee","i","wrap","_context","prev","next","stop","apply","arguments","animatePlaybackSequence","_this4","buttonComponents","map","buttonColor","Button_Button","key","ref","components_Controls","connect","hScore","currentButton","playerPlaybackSequence","initialState","store","createStore","Control","undefined","action","toConsumableArray","Helpers","newPlayerPlaybackSequence","Resources","volume","newPlaybackSequence","nextColorScheme","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_Container","document","getElementById"],"mappings":"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","file":"static/js/main.a387d82b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simonSound1.319c7710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound2.c3c86e71.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound3.f3c18b98.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound4.f4a912ee.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound5.90caa9b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.0d0e62da.flac\";","import firstSound from './sounds/simonSound1.mp3';\r\nimport secondSound from './sounds/simonSound2.mp3';\r\nimport thirdSound from './sounds/simonSound3.mp3';\r\nimport fourthSound from './sounds/simonSound4.mp3';\r\nimport fithSound from './sounds/simonSound5.mp3';\r\nimport sixthSound from './sounds/success.flac';\r\n\r\nexport const colorSchemes = [\r\n    [\r\n        \"#e74c3c\",\r\n        \"#f1c40f\",\r\n        \"#2ecc71\",\r\n        \"#9b59b6\"\r\n    ], \r\n    [\r\n        \"#f0f\",\r\n        \"#fff\",\r\n        \"#f00\",\r\n        \"#0ff\"\r\n    ],\r\n    [\r\n        \"#2ecc71\",\r\n        \"#9b59b6\",\r\n        \"#fff\",\r\n        \"#f0f\",\r\n    ]\r\n];\r\n\r\nexport const sounds = [\r\n    firstSound,\r\n    secondSound,\r\n    thirdSound,\r\n    fourthSound,\r\n    fithSound,\r\n    sixthSound,\r\n];","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { sounds } from '../resources';\r\n\r\nexport default class Button extends Component {\r\n    static propTypes = {\r\n        index: PropTypes.number.isRequired,\r\n        color: PropTypes.string.isRequired,\r\n        isPlaying: PropTypes.bool.isRequired,\r\n        inputPause: PropTypes.bool.isRequired,\r\n        buttonPress: PropTypes.func.isRequired,\r\n    };\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = { show: false };\r\n        \r\n        this.buttonPress = this.buttonPress.bind(this);\r\n        this.registerButtonPress = this.registerButtonPress.bind(this);\r\n    }\r\n    \r\n    buttonPress() {\r\n        this.setState( { show: true });\r\n\r\n        let soundEffect =  new Audio(sounds[this.props.index]);\r\n        soundEffect.currentTime = 0.125;\r\n        soundEffect.play();\r\n                    \r\n        setTimeout(() => this.setState( { show: false } ), 150);\r\n    }\r\n\r\n    registerButtonPress() {\r\n        if (!this.props.inputPause && this.props.isPlaying) {\r\n            this.buttonPress();\r\n            this.props.buttonPress(this.props.index)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div onClick={this.registerButtonPress} style={ {backgroundColor: this.props.color} } className=\"button\">\r\n                <div className={`button-overlay ${this.state.show ? \"button-overlay-on\" : \"\"} ${this.props.isPlaying ? \"game-on\" : \"\"}`} ></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const fetchRandomButtonIndex = () => \r\n    Math.floor(Math.random() * 4);\r\n\r\nexport const getNextColorScheme = state => \r\n    ++state.colorScheme !== state.buttonColors.length \r\n    ? state.colorScheme \r\n    : 0;\r\n\r\nexport const compareArrays = (arr1, arr2) => \r\n    arr1.length === arr2.length && \r\n    arr1.every((value, index) => \r\n        value === arr2[index]);\r\n\r\nexport const delay = (amount) => {\r\n    return new Promise(resolve => {\r\n      setTimeout(resolve, amount);\r\n    })\r\n};\r\n\r\nexport const parseScore = state => {\r\n    let s = parseInt(state.score);\r\n    let hs = parseInt(state.highScore);\r\n\r\n    let parsedScore = ++s < 10 \r\n        ? \"00\" + s\r\n        : s < 99 \r\n            ? \"0\" + s\r\n            : s.toString();\r\n\r\n    let parsedHighScore = s > hs \r\n        ? parsedScore \r\n        : state.highScore;\r\n    \r\n    let newState = {\r\n        ...state,\r\n        score: parsedScore,\r\n        highScore: parsedHighScore,\r\n    }\r\n    return newState;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Score = props => (\r\n    <div className=\"game-score\">\r\n        <span className={props.isPlaying ? \"game-light-on\" : \"game-light-off\"} >\r\n            {props.score}\r\n        </span>\r\n    </div>\r\n);\r\n\r\nScore.propTypes = {\r\n    score: PropTypes.string.isRequired,\r\n    isPlaying: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Score;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { CSSTransition, transit } from 'react-css-transition';\r\n\r\nCSSTransition.childContextTypes = {}\r\nconst transitionStyles = {\r\n    enterStyle: { transform: transit(\"translate(52.5%)\", 100, \"ease-in-out\") },\r\n    leaveStyle: { transform: transit(\"translate(0)\", 100, \"ease-in-out\") },\r\n    activeStyle: { transform: \"translate(52.5%)\" },\r\n};\r\n\r\nexport default class ControlButtons extends Component {\r\n    static propTypes = {\r\n        isPlaying: PropTypes.bool.isRequired,\r\n        startGame: PropTypes.func.isRequired,\r\n        changeColorScheme: PropTypes.func.isRequired,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"control-buttons\">\r\n                <div className={`game-light ${this.props.isPlaying ? 'game-light-on' : ''}` }></div>\r\n                <div onClick={() => this.props.startGame()} className=\"game-switch\">\r\n                    <CSSTransition {...transitionStyles} active={this.props.isPlaying}>\r\n                        <div className='game-switch-toggle'></div>\r\n                    </CSSTransition>\r\n                </div>\r\n                <div onClick={() => this.props.changeColorScheme()} className={`game-reset ${!this.props.isPlaying ? 'game-light-off' : ''}`}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Score from './Score';\r\nimport ControlButtons from './ControlButtons';\r\n\r\nconst Controls = props => (\r\n    <div className=\"controls\">\r\n        <div className=\"game-name\">\r\n            <span className=\"name\">simon</span>\r\n            <span className=\"game-name-buffer\"></span>\r\n        </div>\r\n        \r\n        <div className=\"game-controls\">\r\n            <Score score={props.score} isPlaying={props.isPlaying} />\r\n            <ControlButtons isPlaying={props.isPlaying} startGame={props.startGame} changeColorScheme={props.changeColorScheme} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Controls;","export const GAME_END = 'GAME_END';\r\n\r\nexport const GAME_START = 'GAME_START';\r\n\r\nexport const HALT_INPUT = 'HALT_INPUT';\r\n\r\nexport const ALLOW_INPUT = 'ALLOW_INPUT';\r\n\r\nexport const BUTTON_PRESS = 'BUTTON_PRESS';\r\n\r\nexport const ADD_TO_PLAYBACK_SEQUENCE = \"ADD_TO_PLAYBACK_SEQUENCE\";\r\n\r\nexport const GAME_CHANGE_COLOR_SCHEME = 'GAME_CHANGE_COLOR_SCHEME';\r\n","import * as ControlActionTypes from '../actiontypes/control';\r\n\r\n\r\nexport const endGame = () => ({ type: ControlActionTypes.GAME_END });\r\n\r\nexport const startGame = () => ({ type: ControlActionTypes.GAME_START });\r\n\r\nexport const haltInput = () => ({ type: ControlActionTypes.HALT_INPUT });\r\n\r\nexport const allowInput = () => ({ type: ControlActionTypes.ALLOW_INPUT });\r\n\r\nexport const addToPlaybackSequence = () => ({ type: ControlActionTypes.ADD_TO_PLAYBACK_SEQUENCE });\r\n\r\nexport const buttonPress = buttonIndex => ({ type: ControlActionTypes.BUTTON_PRESS, buttonIndex });\r\n\r\nexport const changeColorScheme = colorSchemeId => ({ type: ControlActionTypes.GAME_CHANGE_COLOR_SCHEME, colorSchemeId });\r\n","import { bindActionCreators } from 'redux';\r\nimport React, { Component } from 'react';\r\nimport { connect  } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from './components/Button';\r\nimport { delay } from './helpers/helpers';\r\nimport Controls from './components/Controls';\r\nimport * as ControlActionCreators from './actions/control';\r\n\r\nclass Container extends Component {\r\n  static propTypes = {\r\n    score: PropTypes.string.isRequired,\r\n    hScore: PropTypes.string.isRequired,\r\n    isPlaying: PropTypes.bool.isRequired,\r\n    inputPause: PropTypes.bool.isRequired,\r\n    colorScheme: PropTypes.number.isRequired,\r\n    buttonColors: PropTypes.array.isRequired,\r\n    playbackSequence: PropTypes.array.isRequired,\r\n    playerPlaybackSequence: PropTypes.array.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { dispatch } = props;\r\n\r\n    this.endGame = bindActionCreators(ControlActionCreators.endGame, dispatch);\r\n    this.startGame = bindActionCreators(ControlActionCreators.startGame, dispatch);\r\n    this.haltInput = bindActionCreators(ControlActionCreators.haltInput, dispatch);\r\n    this.allowInput = bindActionCreators(ControlActionCreators.allowInput, dispatch);\r\n    this.buttonPress = bindActionCreators(ControlActionCreators.buttonPress, dispatch);\r\n    this.changeColorScheme = bindActionCreators(ControlActionCreators.changeColorScheme, dispatch);\r\n    this.addToPlaybackSequence = bindActionCreators(ControlActionCreators.addToPlaybackSequence, dispatch);\r\n\r\n    this.showPlaybackSequence = this.showPlaybackSequence.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.playbackSequence.length !== prevState.playbackSequence.length && this.props.isPlaying === true) {\r\n      setTimeout(() => { this.showPlaybackSequence() }, 1000);\r\n    }\r\n  }\r\n\r\n  showPlaybackSequence() {\r\n    let playbackSequence = this.props.playbackSequence;\r\n    let refs = this.refs;\r\n\r\n    \r\n    const animatePlaybackSequence = async () => {\r\n      this.haltInput();\r\n      for (let i = 0; i < playbackSequence.length;) {\r\n        refs[playbackSequence[i++]].buttonPress();\r\n        await delay(500);\r\n      }\r\n      await this.allowInput();\r\n    };\r\n\r\n    animatePlaybackSequence();\r\n  }\r\n\r\n  render() {\r\n    const buttonComponents = this.props.buttonColors[this.props.colorScheme].map((buttonColor, index) => \r\n      <Button key={index} ref={index} index={index} color={buttonColor} isPlaying={this.props.isPlaying} inputPause={this.props.inputPause} buttonPress={this.buttonPress} />\r\n    );\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          {buttonComponents}\r\n          <Controls score={this.props.score} startGame={this.startGame} isPlaying={this.props.isPlaying} changeColorScheme={this.changeColorScheme} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    score: state.score,\r\n    hScore: state.hScore,\r\n    isPlaying: state.isPlaying,\r\n    inputPause: state.inputPause,\r\n    colorScheme: state.colorScheme,\r\n    buttonColors: state.buttonColors,\r\n    currentButton: state.currentButton,\r\n    playbackSequence: state.playbackSequence,\r\n    playerPlaybackSequence: state.playerPlaybackSequence,\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps)(Container);","import * as ControlActionTypes from '../actiontypes/control';\r\nimport * as Helpers from '../helpers/helpers';\r\nimport * as Resources from '../resources';\r\n\r\nconst initialState = {\r\n    score: \"000\",\r\n    \r\n    hScore: \"000\",\r\n    \r\n    colorScheme: 0,\r\n    \r\n    isPlaying: false,\r\n\r\n    inputPause: false,\r\n    \r\n    currentButton: null,\r\n    \r\n    playbackSequence: [],\r\n    \r\n    playerPlaybackSequence: [],\r\n\r\n    buttonColors: Resources.colorSchemes,\r\n};\r\n\r\nexport default function Control(state=initialState, action) {\r\n\r\n    switch(action.type) {\r\n\r\n        case ControlActionTypes.GAME_END: {\r\n\r\n            return {\r\n                ...state,\r\n                score: \"000\",\r\n                isPlaying: false,\r\n                currentButton: null,\r\n                playbackSequence: [],\r\n                playerPlaybackSequence: [],\r\n            };\r\n        }\r\n\r\n        case ControlActionTypes.GAME_START: {\r\n            let playbackSequence = [\r\n                ...state.playbackSequence, \r\n                Helpers.fetchRandomButtonIndex()\r\n            ];\r\n            \r\n            if (state.isPlaying) {\r\n                return Control(state, { type: ControlActionTypes.GAME_END });\r\n            }\r\n\r\n            return { \r\n                ...state, \r\n                isPlaying: true,\r\n                playbackSequence,\r\n            } \r\n        }\r\n\r\n        case ControlActionTypes.ALLOW_INPUT: {\r\n\r\n            return {\r\n                ...state,\r\n                inputPause: false,\r\n            }\r\n        }\r\n\r\n        case ControlActionTypes.HALT_INPUT: {\r\n\r\n            return {\r\n                ...state,\r\n                inputPause: true,\r\n            }\r\n        }\r\n\r\n        case ControlActionTypes.BUTTON_PRESS: {\r\n            let newPlayerPlaybackSequence = [\r\n                ...state.playerPlaybackSequence, \r\n                action.buttonIndex\r\n            ];\r\n\r\n            // Start at the end of the array and work back\r\n            for (let i = newPlayerPlaybackSequence.length; i--;) {\r\n                if (state.playbackSequence[i] !== newPlayerPlaybackSequence[i]){\r\n                    let soundEffect =  new Audio(Resources.sounds[4]);\r\n                    soundEffect.volume = 0.07;\r\n                    soundEffect.play();\r\n\r\n                    return Control(state, { type: ControlActionTypes.GAME_END });\r\n                }\r\n            }\r\n            \r\n            if (state.playbackSequence.length !== newPlayerPlaybackSequence.length) {\r\n\r\n                return {\r\n                    ...state, \r\n                    playerPlaybackSequence: newPlayerPlaybackSequence \r\n                }\r\n            }\r\n\r\n            let soundEffect = new Audio(Resources.sounds[5]);\r\n            soundEffect.volume = 0.3;\r\n            setTimeout(() => { soundEffect.play() }, 300);\r\n\r\n            state = Helpers.parseScore(state);\r\n\r\n            return Control(state, { type: ControlActionTypes.ADD_TO_PLAYBACK_SEQUENCE })\r\n        }\r\n\r\n        case ControlActionTypes.ADD_TO_PLAYBACK_SEQUENCE: {\r\n            let newPlaybackSequence = [\r\n                ...state.playbackSequence, \r\n                Helpers.fetchRandomButtonIndex()\r\n            ];\r\n\r\n            return {\r\n                ...state,\r\n                playerPlaybackSequence: [],\r\n                playbackSequence: newPlaybackSequence\r\n            }\r\n        }\r\n\r\n        case ControlActionTypes.GAME_CHANGE_COLOR_SCHEME: {\r\n            let nextColorScheme = Helpers.getNextColorScheme(state);\r\n\r\n            return {\r\n                ...state,\r\n                colorScheme: nextColorScheme\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Container from './Container';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport ControlReducer from './reducers/control';\r\n\r\nimport './App.css';\r\n\r\nconst store = createStore(\r\n    ControlReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Container /> \r\n    </Provider>,\r\n\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}