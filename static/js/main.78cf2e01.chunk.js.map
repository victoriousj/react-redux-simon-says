{"version":3,"sources":["sounds/simonSound1.mp3","sounds/simonSound2.mp3","sounds/simonSound3.mp3","sounds/simonSound4.mp3","sounds/simonSound5.mp3","sounds/success.flac","resources.js","components/Button.js","helpers/index.js","components/Score.js","components/ControlButtons.js","components/Controls.js","actiontypes/control.js","actions/control.js","Container.js","reducers/control.js","index.js"],"names":["module","exports","__webpack_require__","p","sounds","firstSound","secondSound","thirdSound","fourthSound","fithSound","sixthSound","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerButtonPress","assertThisInitialized","inputPause","isPlaying","buttonPress","index","setState","show","soundEffect","Audio","src","currentTime","play","setTimeout","state","color","buttonStyle","concat","overlayStyle","react_default","a","createElement","className","onClick","style","backgroundColor","Component","fetchRandomButtonIndex","Math","floor","random","delay","x","Promise","r","getNextColorScheme","buttonColors","length","colorScheme","parseScore","s","parseInt","score","hs","highScore","parsedScore","parsedHighScore","objectSpread","Score","CSSTransition","childContextTypes","transitionStyles","enterStyle","transform","transit","leaveStyle","activeStyle","ControlButtons","startGame","react_css_transition_lib","assign","active","changeColorScheme","Controls","components_Score","components_ControlButtons","protoTypes","PropTypes","string","isRequired","bool","func","number","GAME_END","GAME_START","HALT_INPUT","ALLOW_INPUT","BUTTON_PRESS","ADD_TO_PLAYBACK_SEQUENCE","GAME_CHANGE_COLOR_SCHEME","endGame","type","actionTypes","haltInput","allowInput","addToPlaybackSequence","buttonIndex","colorSchemeId","Container","showPlaybackSequence","asyncToGenerator","regenerator_default","mark","_callee","i","wrap","_context","prev","next","playbackSequence","refs","stop","dispatch","bindActionCreators","actionCreators","prevState","_this2","_this3","buttonComponents","map","buttonColor","Button_Button","key","ref","components_Controls","connect","hScore","currentButton","playerPlaybackSequence","initialState","store","createStore","Control","arguments","undefined","action","ControlActionTypes","toConsumableArray","newPlayerPlaybackSequence","volume","newPlaybackSequence","ReactDOM","render","es","src_Container","document","getElementById"],"mappings":"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","file":"static/js/main.78cf2e01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simonSound1.319c7710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound2.c3c86e71.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound3.f3c18b98.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound4.f4a912ee.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound5.90caa9b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.0d0e62da.flac\";","import firstSound from \"./sounds/simonSound1.mp3\";\nimport secondSound from \"./sounds/simonSound2.mp3\";\nimport thirdSound from \"./sounds/simonSound3.mp3\";\nimport fourthSound from \"./sounds/simonSound4.mp3\";\nimport fithSound from \"./sounds/simonSound5.mp3\";\nimport sixthSound from \"./sounds/success.flac\";\n\nexport const colorSchemes = [\n  [\"#e74c3c\", \"#f1c40f\", \"#2ecc71\", \"#9b59b6\"],\n  [\"#f0f\", \"#fff\", \"#f00\", \"#0ff\"],\n  [\"#2ecc71\", \"#9b59b6\", \"#fff\", \"#f0f\"]\n];\n\nexport const sounds = [\n  firstSound,\n  secondSound,\n  thirdSound,\n  fourthSound,\n  fithSound,\n  sixthSound\n];\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { sounds } from \"../resources\";\n\nexport default class Button extends Component {\n  static propTypes = {\n    index: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    isPlaying: PropTypes.bool.isRequired,\n    inputPause: PropTypes.bool.isRequired,\n    buttonPress: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n  }\n\n  registerButtonPress = () => {\n    const { props } = this;\n    if (!props.inputPause && props.isPlaying) {\n      this.buttonPress();\n      props.buttonPress(props.index);\n    }\n  };\n\n  buttonPress = () => {\n    this.setState({ show: true });\n\n    const soundEffect = new Audio();\n    soundEffect.src = sounds[this.props.index];\n    soundEffect.currentTime = 0.125;\n    soundEffect.play();\n\n    setTimeout(() => this.setState({ show: false }), 150);\n  };\n\n  render() {\n    const { props, state } = this;\n    const { color, inputPause } = props;\n    const { show } = state;\n\n    const buttonStyle = `button ${show && !inputPause ? \"shrink\" : \"\"}`;\n    const overlayStyle = `overlay ${show ? \"on\" : \"\"}`;\n\n    return (\n      <div\n        className={buttonStyle}\n        onClick={this.registerButtonPress}\n        style={{ backgroundColor: color }}\n      >\n        <div className={overlayStyle} />\n      </div>\n    );\n  }\n}\n","export const fetchRandomButtonIndex = () => Math.floor(Math.random() * 4);\r\n\r\nexport const delay = x => new Promise(r => setTimeout(r, x));\r\n\r\nexport const getNextColorScheme = state =>\r\n  state.buttonColors.length !== ++state.colorScheme ? state.colorScheme : 0;\r\n\r\nexport const parseScore = state => {\r\n  let s = parseInt(state.score);\r\n  let hs = parseInt(state.highScore);\r\n  const parsedScore = ++s < 10 ? `00${s}` : s < 99 ? `0${s}` : s;\r\n  const parsedHighScore = s > hs ? parsedScore : state.highScore;\r\n\r\n  return {\r\n    ...state,\r\n    score: parsedScore,\r\n    highScore: parsedHighScore\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Score = props => (\r\n  <div className=\"game-score\">\r\n    <span className={props.isPlaying ? \"game-light-on\" : \"game-light-off\"}>\r\n      {props.score}\r\n    </span>\r\n  </div>\r\n);\r\n\r\nScore.propTypes = {\r\n  score: PropTypes.string.isRequired,\r\n  isPlaying: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, transit } from \"react-css-transition\";\r\n\r\nCSSTransition.childContextTypes = {};\r\nconst transitionStyles = {\r\n  enterStyle: { transform: transit(\"translate(52.5%)\", 100, \"ease-in-out\") },\r\n  leaveStyle: { transform: transit(\"translate(0)\", 100, \"ease-in-out\") },\r\n  activeStyle: { transform: \"translate(52.5%)\" }\r\n};\r\n\r\nconst ControlButtons = props => (\r\n  <div className=\"control-buttons\">\r\n    <div className={`game-light ${props.isPlaying ? \"game-light-on\" : \"\"}`} />\r\n    <div onClick={() => props.startGame()} className=\"game-switch\">\r\n      <CSSTransition {...transitionStyles} active={props.isPlaying}>\r\n        <div className=\"game-switch-toggle\" />\r\n      </CSSTransition>\r\n    </div>\r\n    <div\r\n      onClick={() => props.changeColorScheme()}\r\n      className={`game-reset ${!props.isPlaying ? \"game-light-off\" : \"\"}`}\r\n    />\r\n  </div>\r\n);\r\n\r\nControlButtons.propTypes = {\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  changeColorScheme: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ControlButtons;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport Score from \"./Score\";\r\nimport ControlButtons from \"./ControlButtons\";\r\n\r\nconst Controls = props => (\r\n  <div className=\"controls\">\r\n    <div className=\"game-name\">\r\n      <span className=\"name\">simon</span>\r\n      <span className=\"game-name-buffer\" />\r\n    </div>\r\n\r\n    <div className=\"game-controls\">\r\n      <Score score={props.score} isPlaying={props.isPlaying} />\r\n      <ControlButtons\r\n        isPlaying={props.isPlaying}\r\n        startGame={props.startGame}\r\n        changeColorScheme={props.changeColorScheme}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nControls.protoTypes = {\r\n  score: PropTypes.string.isRequired,\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  changeColorScheme: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Controls;\r\n","export const GAME_END = \"GAME_END\";\nexport const GAME_START = \"GAME_START\";\nexport const HALT_INPUT = \"HALT_INPUT\";\nexport const ALLOW_INPUT = \"ALLOW_INPUT\";\nexport const BUTTON_PRESS = \"BUTTON_PRESS\";\nexport const ADD_TO_PLAYBACK_SEQUENCE = \"ADD_TO_PLAYBACK_SEQUENCE\";\nexport const GAME_CHANGE_COLOR_SCHEME = \"GAME_CHANGE_COLOR_SCHEME\";\n","import * as actionTypes from \"../actiontypes/control\";\n\nexport const endGame = () => ({ type: actionTypes.GAME_END });\n\nexport const startGame = () => ({ type: actionTypes.GAME_START });\n\nexport const haltInput = () => ({ type: actionTypes.HALT_INPUT });\n\nexport const allowInput = () => ({ type: actionTypes.ALLOW_INPUT });\n\nexport const addToPlaybackSequence = () => ({\n  type: actionTypes.ADD_TO_PLAYBACK_SEQUENCE\n});\n\nexport const buttonPress = buttonIndex => ({\n  type: actionTypes.BUTTON_PRESS,\n  buttonIndex\n});\n\nexport const changeColorScheme = colorSchemeId => ({\n  type: actionTypes.GAME_CHANGE_COLOR_SCHEME,\n  colorSchemeId\n});\n","import { bindActionCreators } from \"redux\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"./components/Button\";\nimport { delay } from \"./helpers\";\nimport Controls from \"./components/Controls\";\nimport * as actionCreators from \"./actions/control\";\n\nclass Container extends Component {\n  static propTypes = {\n    score: PropTypes.string.isRequired,\n    hScore: PropTypes.string.isRequired,\n    isPlaying: PropTypes.bool.isRequired,\n    inputPause: PropTypes.bool.isRequired,\n    colorScheme: PropTypes.number.isRequired,\n    buttonColors: PropTypes.array.isRequired,\n    playbackSequence: PropTypes.array.isRequired,\n    playerPlaybackSequence: PropTypes.array.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { dispatch } = props;\n\n    this.endGame = bindActionCreators(actionCreators.endGame, dispatch);\n    this.startGame = bindActionCreators(actionCreators.startGame, dispatch);\n    this.haltInput = bindActionCreators(actionCreators.haltInput, dispatch);\n    this.allowInput = bindActionCreators(actionCreators.allowInput, dispatch);\n    this.buttonPress = bindActionCreators(actionCreators.buttonPress, dispatch);\n    this.changeColorScheme = bindActionCreators(\n      actionCreators.changeColorScheme,\n      dispatch\n    );\n    this.addToPlaybackSequence = bindActionCreators(\n      actionCreators.addToPlaybackSequence,\n      dispatch\n    );\n  }\n\n  componentDidUpdate(prevState) {\n    if (\n      this.props.playbackSequence.length !== prevState.playbackSequence.length\n    ) {\n      setTimeout(() => {\n        this.showPlaybackSequence();\n      }, 1000);\n    }\n  }\n\n  showPlaybackSequence = () => {\n    const { props } = this;\n    (async () => {\n      this.haltInput();\n\n      for (let i = 0; i < props.playbackSequence.length; await delay(500)) {\n        let currentButton = this.refs[props.playbackSequence[i++]];\n        currentButton.buttonPress();\n      }\n\n      await this.allowInput();\n    })();\n  };\n\n  render() {\n    const { props } = this;\n    const { colorScheme, isPlaying, inputPause, buttonColors, score } = props;\n\n    const buttonComponents = buttonColors[colorScheme].map(\n      (buttonColor, index) => (\n        <Button\n          key={index}\n          ref={index}\n          index={index}\n          color={buttonColor}\n          isPlaying={isPlaying}\n          inputPause={inputPause}\n          buttonPress={this.buttonPress}\n        />\n      )\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {buttonComponents}\n          <Controls\n            score={score}\n            isPlaying={isPlaying}\n            startGame={this.startGame}\n            changeColorScheme={this.changeColorScheme}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  score: state.score,\n  hScore: state.hScore,\n  isPlaying: state.isPlaying,\n  inputPause: state.inputPause,\n  colorScheme: state.colorScheme,\n  buttonColors: state.buttonColors,\n  currentButton: state.currentButton,\n  playbackSequence: state.playbackSequence,\n  playerPlaybackSequence: state.playerPlaybackSequence\n});\n\nexport default connect(mapStateToProps)(Container);\n","import * as ControlActionTypes from \"../actiontypes/control\";\nimport { sounds, colorSchemes } from \"../resources\";\nimport {\n  parseScore,\n  getNextColorScheme,\n  fetchRandomButtonIndex\n} from \"../helpers\";\n\nconst initialState = {\n  score: \"000\",\n  hScore: \"000\",\n  colorScheme: 0,\n  isPlaying: false,\n  inputPause: false,\n  currentButton: null,\n  playbackSequence: [],\n  playerPlaybackSequence: [],\n  buttonColors: colorSchemes\n};\n\nexport default function Control(state = initialState, action) {\n  switch (action.type) {\n    case ControlActionTypes.GAME_END: {\n      return {\n        ...state,\n        score: \"000\",\n        isPlaying: false,\n        currentButton: null,\n        playbackSequence: [],\n        playerPlaybackSequence: []\n      };\n    }\n\n    case ControlActionTypes.GAME_START: {\n      const playbackSequence = [\n        ...state.playbackSequence,\n        fetchRandomButtonIndex()\n      ];\n\n      if (state.isPlaying) {\n        return Control(state, { type: ControlActionTypes.GAME_END });\n      }\n\n      return {\n        ...state,\n        isPlaying: true,\n        playbackSequence\n      };\n    }\n\n    case ControlActionTypes.ALLOW_INPUT: {\n      return {\n        ...state,\n        inputPause: false\n      };\n    }\n\n    case ControlActionTypes.HALT_INPUT: {\n      return {\n        ...state,\n        inputPause: true\n      };\n    }\n\n    case ControlActionTypes.BUTTON_PRESS: {\n      const newPlayerPlaybackSequence = [\n        ...state.playerPlaybackSequence,\n        action.buttonIndex\n      ];\n\n      // Start at the end of the array and work back\n      for (let i = newPlayerPlaybackSequence.length; i--; ) {\n        if (state.playbackSequence[i] !== newPlayerPlaybackSequence[i]) {\n          const soundEffect = new Audio();\n          soundEffect.src = sounds[4];\n          soundEffect.volume = 0.07;\n          soundEffect.play();\n\n          return Control(state, { type: ControlActionTypes.GAME_END });\n        }\n      }\n\n      if (state.playbackSequence.length !== newPlayerPlaybackSequence.length) {\n        return {\n          ...state,\n          playerPlaybackSequence: newPlayerPlaybackSequence\n        };\n      }\n\n      const soundEffect = new Audio();\n      soundEffect.volume = 0.6;\n      soundEffect.src = sounds[5];\n      setTimeout(() => soundEffect.play(), 200);\n\n      state = parseScore(state);\n\n      return Control(state, {\n        type: ControlActionTypes.ADD_TO_PLAYBACK_SEQUENCE\n      });\n    }\n\n    case ControlActionTypes.ADD_TO_PLAYBACK_SEQUENCE: {\n      const newPlaybackSequence = [\n        ...state.playbackSequence,\n        fetchRandomButtonIndex()\n      ];\n\n      return {\n        ...state,\n        playerPlaybackSequence: [],\n        playbackSequence: newPlaybackSequence\n      };\n    }\n\n    case ControlActionTypes.GAME_CHANGE_COLOR_SCHEME: {\n      return {\n        ...state,\n        colorScheme: getNextColorScheme(state)\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import \"babel-polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"./Container\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./reducers/control\";\n\nimport \"./App.css\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Container />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}